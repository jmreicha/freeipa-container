#
# Workaround 1364139
#
--- /usr/lib/python2.7/site-packages/ipaserver/install/server/replicainstall.py	2017-03-23 18:17:12.000000000 +0000
+++ /usr/lib/python2.7/site-packages/ipaserver/install/server/replicainstall.py	2018-09-17 10:16:55.609492132 +0000
@@ -586,7 +586,7 @@
     api.bootstrap(in_server=True, context='installer')
     api.finalize()
 
-    installutils.verify_fqdn(config.master_host_name, options.no_host_dns)
+    installutils.verify_fqdn(config.master_host_name, options.no_host_dns, local_hostname=False)
 
     cafile = config.dir + "/ca.crt"
     if not ipautil.file_exists(cafile):
@@ -1091,7 +1091,7 @@
                            " CA certificate")
 
     installutils.verify_fqdn(config.host_name, options.no_host_dns)
-    installutils.verify_fqdn(config.master_host_name, options.no_host_dns)
+    installutils.verify_fqdn(config.master_host_name, options.no_host_dns, local_hostname=False)
 
     ccache = os.environ['KRB5CCNAME']
     ipautil.kinit_keytab('host/{env.host}@{env.realm}'.format(env=api.env),
#
# Workaround 1377973
#
--- /usr/lib/python2.7/site-packages/ipaserver/install/installutils.py	2017-03-23 18:17:12.000000000 +0000
+++ /usr/lib/python2.7/site-packages/ipaserver/install/installutils.py	2018-09-17 10:17:46.553150313 +0000
@@ -510,7 +510,7 @@
     if len(hostaddr):
         for ha in hostaddr:
             try:
-                ips.append(ipautil.CheckedIPAddress(ha, match_local=True))
+                ips.append(ipautil.CheckedIPAddress(ha, match_local=False))
             except ValueError as e:
                 root_logger.warning("Invalid IP address %s for %s: %s", ha, host_name, unicode(e))
 
--- /usr/lib/python2.7/site-packages/ipaserver/install/server/common.py	2017-03-23 17:16:35.000000000 +0000
+++ /usr/lib/python2.7/site-packages/ipaserver/install/server/common.py	2018-09-17 11:04:37.027482579 +0000
@@ -308,7 +308,7 @@
     )
 
     ip_addresses = Knob(
-        (list, 'ip-local'), None,
+        (list, 'ip'), None,
         description=("Master Server IP Address. This option can be used "
                      "multiple times"),
         cli_name='ip-address',

#
# Workaround https://fedorahosted.org/freeipa/ticket/6518
#
--- /usr/lib/python2.7/site-packages/ipaserver/install/installutils.py	2017-03-23 17:16:35.000000000 +0000
+++ /usr/lib/python2.7/site-packages/ipaserver/install/installutils.py	2018-09-17 11:05:38.310276241 +0000
@@ -476,7 +476,7 @@
     # to avoid cases where we get IP address for an totally different name
     # but there is no way to do this using getaddrinfo parameters
     try:
-        addrinfos = socket.getaddrinfo(fqdn, None,
+        addrinfos = socket.getaddrinfo(fqdn.rstrip("."), None,
                                        socket.AF_UNSPEC, socket.SOCK_STREAM)
     except socket.error as ex:
         if ex.errno == socket.EAI_NODATA or ex.errno == socket.EAI_NONAME:
#
# Force systemd not to attempt to create session keyring
#
--- /usr/lib/systemd/system/pki-tomcatd@.service	2016-08-08 22:04:47.000000000 +0000
+++ /usr/lib/systemd/system/pki-tomcatd@.service	2018-11-08 21:22:59.977896866 +0000
@@ -7,9 +7,7 @@
 EnvironmentFile=/etc/tomcat/tomcat.conf
 Environment="NAME=%i"
 EnvironmentFile=-/etc/sysconfig/%i
-ExecStartPre=/usr/bin/pkidaemon start %i
-ExecStart=/usr/libexec/tomcat/server start
-ExecStop=/usr/libexec/tomcat/server stop
+ExecStartPre=/usr/sbin/runuser -g pkiuser -u pkiuser -- /usr/bin/pkidaemon start %i
+ExecStart=/usr/sbin/runuser -g pkiuser -u pkiuser -- /usr/libexec/tomcat/server start
+ExecStop=/usr/sbin/runuser -g pkiuser -u pkiuser -- /usr/libexec/tomcat/server stop
 SuccessExitStatus=143
-User=pkiuser
-Group=pkiuser
--- /usr/lib/systemd/system/ipa-dnskeysyncd.service	2017-06-29 16:19:07.000000000 +0000
+++ /usr/lib/systemd/system/ipa-dnskeysyncd.service	2018-11-08 21:22:23.330709455 +0000
@@ -3,10 +3,7 @@
 
 [Service]
 EnvironmentFile=/etc/sysconfig/ipa-dnskeysyncd
-ExecStart=/usr/libexec/ipa/ipa-dnskeysyncd
-User=ods
-Group=named
-SupplementaryGroups=ods
+ExecStart=/usr/sbin/runuser -g named -G ods -u ods -- /usr/libexec/ipa/ipa-dnskeysyncd
 PrivateTmp=yes
 Restart=on-failure
 RestartSec=60s
#
# Do not use kernel keyring, it is not namespaced
#
--- /etc/krb5.conf	2016-08-29 19:09:04.000000000 +0000
+++ /etc/krb5.conf	2018-11-15 14:36:58.694929927 +0000
@@ -14,7 +14,7 @@
  forwardable = true
  rdns = false
 # default_realm = EXAMPLE.COM
- default_ccache_name = KEYRING:persistent:%{uid}
+# default_ccache_name = KEYRING:persistent:%{uid}
 
 [realms]
 # EXAMPLE.COM = {
#
# Prevent the default_ccache_name = KEYRING:persistent:%{uid} from
# being put back in during ipa-server-install/ipa-replica-install.
#
--- /usr/lib/python2.7/site-packages/ipapython/kernel_keyring.py       2017-10-18 13:41:28.000000000 +0000
+++ /usr/lib/python2.7/site-packages/ipapython/kernel_keyring.py       2018-09-19 06:54:09.654029061 +0000
@@ -68,7 +68,7 @@
     except ValueError:
         return False
 
-    return True
+    return False
 
 def has_key(key):
     """
